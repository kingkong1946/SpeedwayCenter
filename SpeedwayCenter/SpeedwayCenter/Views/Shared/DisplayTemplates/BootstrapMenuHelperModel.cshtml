@model MvcSiteMapProvider.Web.Html.Models.MenuHelperModel
@using System.Web.Mvc.Html
@using MvcSiteMapProvider.Web.Html.Models
@helper AddNode(SiteMapNodeModel node)
{
var url = node.IsClickable ? node.Url : "#";
var route = ViewContext.RouteData;
var action = route.Values["Action"];
var controller = route.Values["Controller"];
var active = action.ToString() == @node.Action && controller.ToString() == node.Controller ? "active" : string.Empty;
    <li class="@active"><a href="@url">@node.Title </a></li>
}
@helper  TopMenu(List<SiteMapNodeModel> nodeList)
{
    <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
        <div class="container-fluid">
            <div class="navbar-header">
                <a class="navbar-brand" href="@Url.Action("Index", "Home")">Speedway Center</a>
            </div>
            <div class="collapse navbar-collapse">
                <ul class="nav navbar-nav">
                    @foreach (SiteMapNodeModel node in nodeList)
                    {
                        if (node != nodeList.Last())
                        {
                            @AddNode(node)
                        }
                    }
                </ul>
                @if (nodeList.Last().Controller == ViewContext.RouteData.Values["Controller"].ToString())
                {
                    <ul class="nav navbar-nav navbar-right">
                        @{
                            var last = nodeList.Last();
                            @AddNode(last)
                        }
                    </ul>
                            }
            </div>
        </div>
    </nav>
}
@TopMenu(Model.Nodes)
