@model SpeedwayCenter.Areas.Admin.ViewModels.Match.AdminEditMatchViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_AdminBasicLayout.cshtml";
}
<div class="col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2">
    <h1>@Html.Label("Edit")</h1>
    @using (@Html.BeginForm("Edit", "Match", FormMethod.Post, new { @class = "form-horizontal" }))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Round, new { @class = "control-label col-sm-4 col-md-3" })
            <div class="col-sm-8 col-md-9">
                @Html.TextBoxFor(model => model.Round, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "control-label col-sm-4 col-md-3" })
            <div class="col-sm-8 col-md-9">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control datepicker" } })
            </div>
        </div>

        <h1>@Html.LabelFor(model => model.HomeTeam)</h1>
        for (var i = 9; i < 16; ++i)
        {
            <div class="form-group">
                @Html.Label(i.ToString(), new { @class = "control-label col-sm-4 col-md-3" })
                <div class="col-sm-8 col-md-9">
                    @Html.HiddenFor(model => model.HomeTeamSelectedRiders[i - 9].Number)
                    @Html.DropDownListFor(
                        model => model.HomeTeamSelectedRiders[i - 9].Rider.Id,
                        new SelectList(
                            Model.HomeTeamsRiders,
                            "Id",
                            "Name",
                            Model.HomeTeamSelectedRiders.FirstOrDefault(ri => ri.Number == i).Rider.Id),
                        new { @class = "form-control" })
                </div>
            </div>
        }

        <h1>@Html.LabelFor(model => model.AwayTeam)</h1>
        for (var i = 1; i < 8; ++i)
        {
            <div class="form-group">
                @Html.Label(i.ToString(), new { @class = "control-label col-sm-4 col-md-3" })
                <div class="col-sm-8 col-md-9">
                    @Html.HiddenFor(model => model.AwayTeamSelectedRiders[i - 1].Number)
                    @Html.DropDownListFor(
                        model => Model.AwayTeamSelectedRiders[i - 1].Rider.Id,
                        new SelectList(
                            Model.AwayTeamsRiders,
                            "Id",
                            "Name",
                            Model.AwayTeamSelectedRiders.FirstOrDefault(ri => ri.Number == i).Rider.Id),
                        new { @class = "form-control" })
                </div>
            </div>
        }
        <h1>@Html.LabelFor(model => model.Heats)</h1>
        <div class="row">
            <div class="col-sm-9">
                @for (int i = 0; i < Model.Heats.Count(); i++)
                {
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Heat</th>
                                <th>Rider</th>
                                <th>Points</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td rowspan="4" class="col-xs-1">
                                    @Html.ValueFor(m => Model.Heats[i].Number)
                                    @Html.HiddenFor(m => Model.Heats[i].Number)
                                </td>
                                <td>
                                    @Html.DropDownListFor(
                            m => Model.Heats[i].RiderIdGateA,
                            new SelectList(Model.HomeTeamACHeats.Contains(Model.Heats[i].Number) ? Model.HomeTeamsRiders : Model.AwayTeamsRiders, "Id", "Name", Model.Heats[i].RiderIdGateA),
                            new { @class = "form-control" })
                                </td>
                                <td class="col-xs-1">@Html.TextBoxFor(m => Model.Heats[i].RiderScoreGateA, new { @class = "form-control" })</td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.DropDownListFor(
                            m => Model.Heats[i].RiderIdGateB,
                            new SelectList(Model.HomeTeamACHeats.Contains(Model.Heats[i].Number) ? Model.AwayTeamsRiders : Model.HomeTeamsRiders, "Id", "Name", Model.Heats[i].RiderIdGateB),
                            new { @class = "form-control" })
                                </td>
                                <td class="col-xs-1">@Html.TextBoxFor(m => Model.Heats[i].RiderScoreGateB, new { @class = "form-control" })</td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.DropDownListFor(
                            m => Model.Heats[i].RiderIdGateC,
                            new SelectList(Model.HomeTeamACHeats.Contains(Model.Heats[i].Number) ? Model.HomeTeamsRiders : Model.AwayTeamsRiders, "Id", "Name", Model.Heats[i].RiderIdGateC),
                            new { @class = "form-control" })
                                </td>
                                <td class="col-xs-1">@Html.TextBoxFor(m => Model.Heats[i].RiderScoreGateC, new { @class = "form-control" })</td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.DropDownListFor(
                            m => Model.Heats[i].RiderIdGateD,
                            new SelectList(Model.HomeTeamACHeats.Contains(Model.Heats[i].Number) ? Model.AwayTeamsRiders : Model.HomeTeamsRiders, "Id", "Name", Model.Heats[i].RiderIdGateD),
                            new { @class = "form-control" })
                                </td>
                                <td class="col-xs-1">@Html.TextBoxFor(m => Model.Heats[i].RiderScoreGateD, new { @class = "form-control" })</td>
                            </tr>
                        </tbody>
                    </table>
                }
            </div>
        </div>
            @Html.HiddenFor(model => model.Id)
            <div class="row">
                <input type="submit" class="btn btn-default" value="Save" />
            </div>
            }


        </div>
<script type="text/javascript">
    $(function () {
        $(".datepicker").datepicker({
            format: 'dd.mm.yyyy',
            startDate: '-100y',
            orientation: 'bottom'
        });
        $.validator.methods.date = function (value, element) {
            Globalize.culture("pl-PL");
            // you can alternatively pass the culture to parseDate instead of
            // setting the culture above, like so:
            // parseDate(value, null, "en-AU")
            return this.optional(element) || Globalize.parseDate(value) !== null;
        }
    });
</script>
